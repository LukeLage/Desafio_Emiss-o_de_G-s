# Processamento de bibliotecas usadas no c√≥digo, uso de cada no coment√°rio ao lado da importa√ß√£o
import pandas as pd #Biblioteca para processamento de dados
import plotly.express as px #Biblioteca para cria√ß√£o de gr√°ficos
import plotly.graph_objects as go # Biblioteca para cria√ß√£o de gr√°ficos
import streamlit as st #Biblioteca para cria√ß√£o de servidor web

# Configura√ß√µes gerais da aplica√ß√£o
st.set_page_config(
    page_title="Emiss√£o de Gas Carb√¥nico na Atmosfera",
    page_icon="üí®",
    layout="wide",
    initial_sidebar_state="expanded",
)

# Carregamento de estiliza√ß√£o CSS vinda da pasta Gases.css
with open("Gases.css", "r") as fp:
    css = fp.read()  # L√™ o conte√∫do do arquivo CSS
    st.write(f"<style>{css}</style>", unsafe_allow_html=True)

# DataFrames feitos com Pandas das informa√ß√µes que ser√£o usadas nos gr√°ficos, para ver qual arquivo ser√° qual gr√°fico, ver coment√°rio a cima de cada fun√ß√£o

# Dicion√°rio usado para fazer o DataFrame dos pa√≠ses com maior taxa de emiss√£o de g√°s carbono
emissao_paises = pd.read_csv ('Pa√≠ses.csv')
paises_df = pd.DataFrame(emissao_paises)


# Dicion√°rio usado para fazer o DataFrame com a quantidade de g√°s carbono emitido em bilh√µes ao longo dos anos
emissao_ano = pd.read_csv('Emiss√£o.csv')
emissao_df = pd.DataFrame(emissao_ano)

# Dicion√°rio usado para fazer o DataFrame com os setores que mais emitem g√°s carbono atualmente
setores = pd.read_csv('Setores.csv') 
setores_df = pd.DataFrame(setores)

# Fun√ß√µes usadas para montar os gr√°ficos para melhor organiza√ß√£o de c√≥digo, para descri√ß√µes espec√≠ficas de cada fun√ß√£o, ver coment√°rio ao lado da def


# Fun√ß√£o para cria√ß√£o dos gr√°ficos usados para visualiza√ß√£o dos pa√≠ses que mais produzem g√°s carbono
def paises():
    fig = px.scatter(
        x = paises_df ['Pa√≠ses'], # Utilize a vari√°vel correta ou verifique o nome da coluna
        y = paises_df ['Porcentagem'],
        color = paises_df ['Toneladas'], 
        size = paises_df ['Porcentagem'],
        labels={"x": "Pa√≠ses", "y": "Porcentagem", "color": "Toneladas"},
        title="Dez Pa√≠ses que Mais Emitem G√°s Carbono",
    )
    st.plotly_chart(fig)

# Fun√ß√£o para carregar o gr√°fico de barra representando toneladas de g√°s carbono emitido
def emissao_gas (): 
    fig = px.line(
        emissao_df, 
        x = 'Anos', 
        y = 'Toneladas', 
        title = 'Emiss√£o de G√°s Carbono por Anos em Toneladas'
    )
    st.plotly_chart(fig)

# Fun√ß√£o para carregar o gr√°fico de pizza representando os setores que mais emitem g√°s carbono
def setores_emissao (): 
    fig = px.bar(
        setores_df,
        x="Setores",
        y="Porcentagem",
        title="Emiss√£o de G√°s de Diversos Setores",
    )
    st.plotly_chart(fig)

# √Årea para cria√ß√£o de colunas para bot√µes de navega√ß√µes entre os gr√°ficos
# Cria√ß√£o de colunas para separa√ß√£o de dois gr√°ficos ao apertar o bot√£o
paises1, paises2 = st.columns(2)

# Side bar com navega√ß√£o entre gr√°ficos e informa√ß√µes sobre o desenvolvedor da aplica√ß√£o
with st.sidebar:
    # Select box apresenta√ß√£o individual dos gr√°ficos que aparecer√£o na tela, para ver qual bot√£o √© referente √† qual gr√°fico, ver nome de cada bot√£o
    st.title('Navega√ß√£o')
    option = st.selectbox(
        'Navegue entre gr√°ficos para encontrar informa√ß√µes espec√≠ficas sobre cada um deles',
        ('Emiss√£o por Setor', 'Emiss√£o de Tonelada por Ano', 'Emiss√£o por Pa√≠s', 'Fechar Gr√°ficos'),
        index = None,
        placeholder = 'Selecione um Gr√°fico'
    )

    # Bot√µes para exibi√ß√£o do que se trata esse dashboard
    sobre = st.radio(
        'Deseja saber sobre o que se trata esse dashboard e o pensamento para sua cria√ß√£o?',
        ['Sim!', 'N√£o!'],
        index = None
    )

    # Bot√µes para exibi√ß√£o e exclus√£o de informa√ß√µes sobre o que √© o G√°s Carbono]
    info = st.radio(
        "Voc√™ sabe o que √© o g√°s ou o que ele causa?",
        ["O que √©?", "O que Causa?", "Fechar Informa√ß√µes"],
        index=None,
    )

    # Navega√ß√£o para a altera√ß√£o do pa√≠s que ser√° exibido a emiss√£o de g√°s carbono
    nav_pais = st.select_slider(
        'Navegue por esta barra para alterar a exibi√ß√£o da emiss√£o de g√°s de pa√≠ses espec√≠ficos',
        ['China', 'Estados Unidos', 'Uni√£o Europeia', '√çndia', 'R√∫ssia', 'Jap√£o', 'Brasil', 'Indon√©sia', 'Iran', 'Coreia do Sul']
    )

    # Informa√ß√µes sobre o desenvolvedor da aplica√ß√£o
    # Colocar o robozinho do desenvolve aqui como marca√ß√£o
    st.title('Quem sou eu?')
    st.write('Programador: Luke Malaquias Lage')
    st.write('PDITA: 172')

# C√≥digo usado para renderiza√ß√£o dos dados para a segunda m√©trica do dashboard

pais_selecionado = nav_pais.lower()  # Converte o pa√≠s para min√∫scula
pais_df = paises_df.loc[paises_df["Pa√≠ses"].str.lower() == pais_selecionado]

emissao_pais = pais_df['Toneladas'].values[0]  # Assume que h√° apenas um valor de emiss√£o


# Container de m√©tricas sobre emiss√£o de g√°s carbono, para ver qual m√©trica representa o que, ver coment√°rio ao lado da m√©trica


metric1, metric2, metric3 = st.columns(3)
metric1.metric(
    label="Produ√ß√£o de G√°s Carbono por Ano", 
    value="52240.86 Toneladas"
)  # M√©trica de produ√ß√£o de g√°s carbono anualmente

metric2.metric (
    label = 'Emiss√£o de G√°s Carbono por Pa√≠s em Toneladas',
    value = emissao_pais
)

metric3.metric (
    label = 'Primeira Medi√ß√£o de G√°s Registrada',
    value = "6 Toneladas"
)

# Fun√ß√µes para a cria√ß√£o de interatividade de um gr√°fico que ir√° aparecer ao selecionar a emiss√£o por ano

def comparacao_ano():
    year = st.select_slider(
        'Selecione o ano que voc√™ deseja ver a compara√ß√£o com a primeira medi√ß√£o',
        [1949, 1950, 1989, 2000, 2019, 2021]
    )
    emissao_ano_filtro = emissao_df [emissao_df['Anos'] == year] # Filtra o dataframe por ano 
    emissao_ano = emissao_ano_filtro['Toneladas'].iloc[0]
    
    primeira_emissao = emissao_df ['Toneladas'].min() # Pega o menor n√∫mero do arquivo csv e transforma na primeira emiss√£o

    fig = go.Figure(  # Exibi√ß√£o do gr√°fico
        go.Indicator(
            mode="gauge + number + delta",
            value = emissao_ano,
            title = {"text": "Compara√ß√£o Anual Desde a Primeira Media√ß√£o"},
            delta = {"reference": primeira_emissao},
        )
    )
    st.plotly_chart(fig)

if option == "Emiss√£o por Setor":
    st.header('Emiss√£o Anual de Gases por Setor Industrial')
    st.write('Esse gr√°fico remete √† m√©dia emiss√£o de gases por ano por diversos setores industriais.')
    st.write('No gr√°fico houve uma pequena simplifica√ß√£o em algumas partes para melhor observa√ß√£o visual, as reparti√ß√µes ser√£o melhores explicadas.')
    st.write('Energia remete √† el√©trica, petr√≥leo e carv√£o;')
    st.write('Terra remete ao uso, mudan√ßa de uso da terra e silvicultura;')
    st.write('Res√≠duos remete √† praticamente todo res√≠duo humano, incluindo aterros e √°guas residuais.')
    setores_emissao()
elif option == "Emiss√£o de Tonelada por Ano":
    st.header('Emiss√£o de Anual de Gases desde 1950')
    st.write('Esse gr√°fico remete √† emiss√£o de g√°s carbono por toneladas emitidos por ano desde os primeiros registros feitos com precis√£o, em 1950.')
    comparacao_ano()
elif option == 'Emiss√£o por Pa√≠s':
    st.header('Emiss√£o de Gases por Pa√≠s')
    st.write('Esse gr√°fico remete √† emiss√£o de g√°s carbono por pa√≠s, principalmente os dez principais que mais causam a emiss√£o deste g√°s anualmente, os dados exp√µe tanto a porcentagem quanto a quantidade em toneladas desses dados.',)
    st.write('Juntos esses pa√≠ses emitem em m√©dia, 68,5% e 37702,16 de toda a emiss√£o mundial em um ano')
    st.write('As cores do gr√°fico ficam cada vez mais escuras a medida que a quantidade em porcentagem de emiss√£o de gases aumenta.')
    paises()
else:
    st.empty()

# Sobre o que √© o Dashboard

if sobre == 'Sim!':
    st.header ('Emiss√£o de G√°s Carbono na Atmosfera')
    
    st.write ('Essa aplica√ß√£o revolve em torno da exposi√ß√£o da emiss√£o de g√°s carb√¥nico na atmosfera desde a era da revolu√ß√£o industrial e quais, nesse momento, s√£o os maiores emissores')
    st.write ('O objetivo da cria√ß√£o desse dashboard foi para a exist√™ncia de uma discuss√£o sobre o aumento da nossa polui√ß√£o, como humanidade e como, com o passar dos anos, mesmo com os acordos entre pa√≠ses para a diminui√ß√£o da emiss√£o de gases, eles apenas crescem cada vez mais na atmosfera')
else:
    st.empty()

# P√°gina de informa√ß√µes sobre o que √© e o que o G√°s Carbono causa
if info == 'O que √©?':
    st.title ('O que √© o G√°s Carbono?')
    st.write ('Tamb√©m √© conhecido como di√≥xido de carbono, sua formula qu√≠mica √© a a CO‚ÇÇ, √© encontrado em temperatura ambiente, transparente, mas absorve radia√ß√£o infravermelha, dessa forma, agindo como um g√°s do efeito estuda, uma das consequ√™ncias disso √© que o g√°s carbono √© um dos principais causadores de mudan√ßas clim√°ticas atualmente.')
    st.write ('A principal causa da emiss√£o desse g√°s √© a queima de combust√≠veis f√≥sseis, mas tamb√©m pode ser liberado por respira√ß√£o e decomposi√ß√£o de seres vivos, erup√ß√£o vulc√¢nica, queimadas e desmatamentos, processamentos industriais, al√©m de tamb√©m refinaria de petr√≥leo, produ√ß√£o de a√ßo e cimento.')
elif info == "O que Causa?":
    st.title ('O que o G√°s Carbono Causa?')
    st.write ('Principalmente, o aumento de g√°s carbono na atmosfera altera condi√ß√µes clim√°ticas mundiais, dentro disso, o aquecimento do oceano que √© respons√°vel pela regula√ß√£o do clima, tamb√©m causa chuva √°cida.')
    st.write ('Mas uma das principais consequ√™ncias √© o desequil√≠brio do efeito estufa, assim, consequentemente elevando a temperatura da terra causando um efeito domin√≥ com cat√°strofes clim√°ticas, o que, por sua vez, j√° causou a extin√ß√£o de diversas esp√©cies da fauna e da')
else:
    st.empty()

# Dashboard da p√°gina inicial

paises()

# Separa√ß√£o das colunas dos gr√°ficos
graphic1, graphic2 = st.columns(2)

# Exibi√ß√£o das colunas
with graphic1:
    emissao_gas()
with graphic2:
    setores_emissao()
